name: 'Publish Symbols'
description: 'Indexes and publishes PDB symbol files similar to Azure DevOps PublishSymbols@2.'
inputs:
  SymbolsPath:
    description: 'Target path to copy the generated symbols package.'
    required: false
    default: ' '
  SearchPattern:
    description: 'Pattern to search for PDB files.'
    required: true
    default: '**\\bin\\**\\*.pdb'
  SymbolsFolder:
    description: 'Root folder where symbol search starts.'
    required: false
    default: ' '
  SkipIndexing:
    description: 'Set to True to skip source indexing.'
    required: false
    default: 'False'
  TreatNotIndexingAsWarning:
    description: 'True to only warn if indexing fails.'
    required: false
    default: 'False'
  SymbolsVersion:
    description: 'Version metadata for the symbols.'
    required: false
    default: ' '
  SymbolsProduct:
    description: 'Product metadata for the symbols.'
    required: false
    default: ' '
  SymbolsArtifactName:
    description: 'Artifact name for the packaged symbols.'
    required: false
    default: 'Symbols_$(BuildConfiguration)'

runs:
  using: "composite"
  steps:
    - name: Publish Symbols
      shell: pwsh
      run: |
        $ErrorActionPreference = "Stop"
        Write-Host "Starting Symbol Publish Process..."

        $SYMBOLS_PATH = "${{ inputs.SymbolsPath }}"
        $SEARCH_PATTERN = "${{ inputs.SearchPattern }}"
        $SYMBOLS_FOLDER = "${{ inputs.SymbolsFolder }}"
        $SKIP_INDEXING = "${{ inputs.SkipIndexing }}"
        $WARN_ON_INDEX_FAIL = "${{ inputs.TreatNotIndexingAsWarning }}"
        $SYMBOLS_VERSION = "${{ inputs.SymbolsVersion }}"
        $SYMBOLS_PRODUCT = "${{ inputs.SymbolsProduct }}"
        $ARTIFACT_NAME = "${{ inputs.SymbolsArtifactName }}"

        Write-Host "Searching for PDBs in folder: $SYMBOLS_FOLDER with pattern: $SEARCH_PATTERN"

        Set-Location $SYMBOLS_FOLDER
        $PDB_FILES = Get-ChildItem -Recurse -Include *.pdb

        if (-not $PDB_FILES) {
            Write-Host "No PDB files found!"
            exit 0
        }

        Write-Host "Found PDB files:"
        $PDB_FILES | ForEach-Object { Write-Host $_.FullName }

        if ($SKIP_INDEXING -eq "False") {
            Write-Host "Performing source indexing (placeholder)..."
        } else {
            Write-Host "Skipping source indexing."
        }

        $ZIP_NAME = "$ARTIFACT_NAME.zip"
        Write-Host "Creating package: $ZIP_NAME"
        Compress-Archive -Path $PDB_FILES.FullName -DestinationPath $ZIP_NAME -Force

        if ($SYMBOLS_PATH -and $SYMBOLS_PATH -ne " ") {
            Write-Host "Copying package to: $SYMBOLS_PATH"
            New-Item -ItemType Directory -Force -Path $SYMBOLS_PATH | Out-Null
            Copy-Item $ZIP_NAME -Destination $SYMBOLS_PATH -Force
        }

        Write-Host "Symbols packaged successfully as $ZIP_NAME"
        Write-Host "Metadata â†’ Product: $SYMBOLS_PRODUCT | Version: $SYMBOLS_VERSION"
